{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abish\\\\projects\\\\musings-project\\\\musings-frontend\\\\src\\\\routes\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useCategories } from '../requests/category';\nimport { useProjects } from '../requests';\nimport { Heading, Button, Grid, GridItem, Flex, Text } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const fetcher = (...args) => fetch(...args).then(res => res.json());\n  const {\n    categories,\n    error: categoryError,\n    isLoading: categoryLoading\n  } = useCategories();\n  const {\n    projects,\n    error: projectError,\n    isLoading: projectLoading\n  } = useProjects();\n  console.log(categories);\n  console.log(projects);\n\n  //transfer to utils\n  const categoryList = !categoryLoading && categories.categories.map(category => {\n    const projectsList = !projectLoading && projects.projects.map(project => {\n      if (project.categoryID === category.categoryID) {\n        return /*#__PURE__*/_jsxDEV(Text, {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(GridItem, {\n      bgColor: \"tertiary\",\n      borderRadius: \"1rem\",\n      padding: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        textAlign: \"center\",\n        color: \"secondary\",\n        children: category.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        children: projectsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, category.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    style: {\n      paddingTop: '8rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"primary\",\n      children: \"Start a new category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      marginTop: \"1rem\",\n      children: \"Your projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      marginTop: \"2rem\",\n      width: \"100%\",\n      flexGrow: 1,\n      templateColumns: \"repeat(4, 1fr)\",\n      gap: 4,\n      children: categoryList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"VjkADxRDVNXeIT82D96Onf9m/3A=\", false, function () {\n  return [useCategories, useProjects];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useCategories","useProjects","Heading","Button","Grid","GridItem","Flex","Text","jsxDEV","_jsxDEV","Dashboard","_s","fetcher","args","fetch","then","res","json","categories","error","categoryError","isLoading","categoryLoading","projects","projectError","projectLoading","console","log","categoryList","map","category","projectsList","project","categoryID","children","title","fileName","_jsxFileName","lineNumber","columnNumber","bgColor","borderRadius","padding","textAlign","color","id","className","style","paddingTop","colorScheme","marginTop","width","flexGrow","templateColumns","gap","_c","$RefreshReg$"],"sources":["C:/Users/abish/projects/musings-project/musings-frontend/src/routes/Dashboard.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useCategories } from '../requests/category'\r\nimport { useProjects } from '../requests'\r\nimport { Heading, Button, Grid, GridItem, Flex, Text } from '@chakra-ui/react'\r\n\r\nconst Dashboard = () => {\r\n  const fetcher = (...args) => fetch(...args).then(res => res.json())\r\n  const {categories, error : categoryError, isLoading : categoryLoading} = useCategories()\r\n  const {projects, error : projectError, isLoading : projectLoading } = useProjects()\r\n\r\n  console.log(categories)\r\n  console.log(projects)\r\n\r\n  //transfer to utils\r\n  const categoryList = !categoryLoading && categories.categories.map(category => {\r\n    const projectsList = !projectLoading && projects.projects.map(project => {\r\n      if(project.categoryID === category.categoryID)\r\n      {\r\n        return (\r\n          <Text>\r\n            {project.title}\r\n          </Text>\r\n        )\r\n      }\r\n    })\r\n    return (\r\n      <GridItem key={category.id} bgColor=\"tertiary\" borderRadius=\"1rem\" padding=\"1rem\">\r\n        <Heading textAlign=\"center\" color=\"secondary\">{category.title}</Heading>\r\n        <Flex>\r\n          {projectsList}\r\n        </Flex>\r\n      </GridItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className='page' style={{ paddingTop: '8rem' }}>\r\n      <Button colorScheme=\"primary\">Start a new category</Button>\r\n      <Heading marginTop='1rem'>Your projects</Heading>\r\n      <Grid\r\n        marginTop='2rem'\r\n        width='100%'\r\n        flexGrow={1}\r\n        templateColumns='repeat(4, 1fr)'\r\n        gap={4}\r\n      >\r\n        {categoryList}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}